#!/bin/sh /etc/rc.common

START=90
SERVICE_WRITE_PID=1
SERVICE_DAEMONIZE=1

section_enabled() {
	local result
	config_get_bool result "$1" 'enabled' 0
	[ $result -eq 1 ]
}

option_disabled() {
	local result
	config_get_bool result "$1" "$2" 1
	[ $result -eq 0 ]
}

start_instance() {
	# $s is 'main' unless changed
	local s="$1"
	local user

	section_enabled "$s" || return 1

	config_get bind_addr "$s" 'bind_addr' '192.168.1.1'
	config_get bind_port "$s" 'bind_port' '49152'
	config_get home_dir "$s" 'home_dir' "/home/gerbera"
	config_get config_dir "$s" 'config_dir' "/etc/gerbera"
	config_get config_file "$s" 'config_file' "$config_dir/config.$s.xml"
	config_get log_file "$s" 'log_file' "$config_dir/$s.log"
	config_get user "$s" 'user'

	mkdir -m 0755 -p "$home_dir" "$config_dir"
	touch "$config_file"

	option_disabled "$s" 'enable_log' || {
		[ -f "$log_file" ] && echo > $log_file # if log file exist, clear it
        }

	# if user is set, change dir owner
	[ -z "$user" ] || {
		chown -R $user:$user "$home_dir" "$config_dir"
	}
	
#    --ip or -i         ip address to bind to
#    --interface or -e  network interface to bind to
#    --port or -p       server port (the SDK only permits values >= 49152)
#    --config or -c     configuration file to use
#    --home or -m       define the home directory
#    --cfgdir or -f     name of the directory that is holding the configuration
#    --pidfile or -P    file to hold the process id
#    --add or -a        add the given file/directory
#    --logfile or -l    log to specified file
#    --debug or -D      enable debug output
#    --compile-info     print configuration summary and exit
#    --version          print version information and exit
#    --help or -h       this help message

	SERVICE_UID="$user" \
	service_start "/usr/bin/gerbera" \
		-i "$bind_addr" \
		-p "$bind_port" \
		-f "$config_dir" \
		-c "$config_file" \
		-m "$home_dir" \
		-P "/var/run/gerbera.$s.pid" \
		-l "$log_file"
}

start() {
	logger -t GERBERA 'Starting gerbera service'
	config_load 'gerbera'
	config_foreach start_instance 'gerbera'
	return 0
}

stop() {
	if [ -n "`pidof gerbera`" ]; then
		logger -t GERBERA 'Shutting down gerbera service'
		service_stop /usr/bin/gerbera
	fi
	return 0
}

restart() {
	logger -t GERBERA 'Restarting gerbera service'
	stop
	sleep 2 # give time to shutdown
	start
}

